https://www.geeksforgeeks.org/problems/remove-every-kth-node/1
1.//my soln-brute force
struct Node
{
    int data;
    struct Node* next;

    Node(int x){
        data = x;
        next = NULL;
    }

};
class Solution {
  public:
    Node* deleteK(Node* head, int k) {
        // code here
        Node *temp=head;
        Node *prev=NULL;
        int i=1;
        while(temp!=NULL)
        {
            if(i==k)
            {
                if(temp->next==NULL)//this condition we donn't need bec anyways if temp->next is 0 then prev->next also be 0
                {
                    prev->next=NULL;
                    i=0;
                }
                prev->next=temp->next;
                i=0;
            }
            prev=temp;
            temp=temp->next;
            i++;
        }
        return head;
    }
};
//2. one step is changed in this code
struct Node
{
    int data;
    struct Node* next;

    Node(int x){
        data = x;
        next = NULL;
    }

};
class Solution {
  public:
    Node* deleteK(Node* head, int k) {
        // code here
        Node *temp=head;
        Node *prev=NULL;
        int i=1;
        while(temp!=NULL)
        {
            if(i==k)
            {
                if(temp->next==NULL)
                {
                    prev->next=NULL;
                    i=0;
                }
                prev->next=temp->next;
                i=0;
            }
         if(i!=0)
               prev=temp;
         temp=prev->next;
            i++;
        }
        return head;
    }
};
//3.nandy's soln
Node* deleteK(Node *head,int k)
{
    if(k==1){
        return NULL;
    }
    if(k==0){
        return head;
    }
  int count=0;
  Node *temp=head;
  while(temp!=NULL){
      count++;
      if((count+1)%k==0){
          if(temp->next!=NULL){
             temp->next=temp->next->next;
          }
          count++;
      }
      
      temp=temp->next;
  }
  return head;
}
